% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cairo-pdf-surface.R
\name{cairo_pdf_surface_create}
\alias{cairo_pdf_surface_create}
\title{cairo_pdf_surface_create}
\usage{
cairo_pdf_surface_create(filename, width_in_points, height_in_points)
}
\arguments{
\item{filename}{[\code{char *}] a filename for the PDF output (must be writable), \%NULL may be used to specify no output. This will generate a PDF surface that may be queried and used as a source, without generating a temporary file.}

\item{width_in_points}{[\code{double}] width of the surface, in points (1 point == 1/72.0 inch)}

\item{height_in_points}{[\code{double}] height of the surface, in points (1 point == 1/72.0 inch)}
}
\value{
[\code{cairo_surface_t *}]
}
\description{
Creates a PDF surface of the specified size in points to be written
to filename.
}
\details{
Return value: a pointer to the newly created surface. The caller
owns the surface and should call cairo_surface_destroy() when done
with it.

This function always returns a valid pointer, but it will return a
pointer to a "nil" surface if an error such as out of memory
occurs. You can use cairo_surface_status() to check for this.

Since: 1.2

C function prototype: \code{cairo_surface_t * cairo_pdf_surface_create (const char *filename, double width_in_points, double height_in_points)}
}
\seealso{
Other cairo-pdf-surface: 
\code{\link{cairo_pdf_surface_add_outline}()},
\code{\link{cairo_pdf_surface_restrict_to_version}()},
\code{\link{cairo_pdf_surface_set_metadata}()},
\code{\link{cairo_pdf_surface_set_page_label}()},
\code{\link{cairo_pdf_surface_set_size}()},
\code{\link{cairo_pdf_surface_set_thumbnail_size}()},
\code{\link{cairo_pdf_version_to_string}()}
}
\concept{cairo-pdf-surface}
