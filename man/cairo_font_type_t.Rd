% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cairo--enum.R
\docType{data}
\name{cairo_font_type_t}
\alias{cairo_font_type_t}
\title{cairo_font_type_t}
\format{
An object of class \code{list} of length 5.
}
\usage{
cairo_font_type_t
}
\description{
#cairo_font_type_t is used to describe the type of a given font
face or scaled font. The font types are also known as "font
backends" within cairo.
}
\details{
The type of a font face is determined by the function used to
create it, which will generally be of the form
<function>cairo_<emphasis>type</emphasis>_font_face_create(<!-- -->)</function>.
The font face type can be queried with cairo_font_face_get_type()

The various #cairo_font_face_t functions can be used with a font face
of any type.

The type of a scaled font is determined by the type of the font
face passed to cairo_scaled_font_create(). The scaled font type can
be queried with cairo_scaled_font_get_type()

The various #cairo_scaled_font_t functions can be used with scaled
fonts of any type, but some font backends also provide
type-specific functions that must only be called with a scaled font
of the appropriate type. These functions have names that begin with
<function>cairo_<emphasis>type</emphasis>_scaled_font(<!-- -->)</function>
such as cairo_ft_scaled_font_lock_face().

The behavior of calling a type-specific function with a scaled font
of the wrong type is undefined.

New entries may be added in future versions.

Since: 1.2

\describe{
\item{CAIRO_FONT_TYPE_TOY}{The font was created using cairo's toy font api (Since: 1.2)}
\item{CAIRO_FONT_TYPE_FT}{The font is of type FreeType (Since: 1.2)}
\item{CAIRO_FONT_TYPE_WIN32}{The font is of type Win32 (Since: 1.2)}
\item{CAIRO_FONT_TYPE_QUARTZ}{The font is of type Quartz (Since: 1.6, in 1.2 and 1.4 it was named CAIRO_FONT_TYPE_ATSUI)}
\item{CAIRO_FONT_TYPE_USER}{The font was create using cairo's user font api (Since: 1.8)}
}
}
\seealso{
Other enum: 
\code{\link{cairo_antialias_t}},
\code{\link{cairo_content_t}},
\code{\link{cairo_device_type_t}},
\code{\link{cairo_extend_t}},
\code{\link{cairo_fill_rule_t}},
\code{\link{cairo_filter_t}},
\code{\link{cairo_font_slant_t}},
\code{\link{cairo_font_weight_t}},
\code{\link{cairo_format_t}},
\code{\link{cairo_ft_synthesize_t}},
\code{\link{cairo_hint_metrics_t}},
\code{\link{cairo_hint_style_t}},
\code{\link{cairo_int_status_t}},
\code{\link{cairo_line_cap_t}},
\code{\link{cairo_line_join_t}},
\code{\link{cairo_operator_t}},
\code{\link{cairo_path_data_type_t}},
\code{\link{cairo_pattern_type_t}},
\code{\link{cairo_pdf_metadata_t}},
\code{\link{cairo_pdf_outline_flags_t}},
\code{\link{cairo_pdf_version_t}},
\code{\link{cairo_ps_level_t}},
\code{\link{cairo_region_overlap_t}},
\code{\link{cairo_status_t}},
\code{\link{cairo_subpixel_order_t}},
\code{\link{cairo_surface_observer_mode_t}},
\code{\link{cairo_surface_type_t}},
\code{\link{cairo_svg_unit_t}},
\code{\link{cairo_svg_version_t}},
\code{\link{cairo_text_cluster_flags_t}},
\code{\link{enum_find}()},
\code{\link{enum_lookup}()}
}
\concept{enum}
\keyword{datasets}
