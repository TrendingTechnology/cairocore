% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cairo-pattern.R
\name{cairo_mesh_pattern_set_corner_color_rgb}
\alias{cairo_mesh_pattern_set_corner_color_rgb}
\title{cairo_mesh_pattern_set_corner_color_rgb}
\usage{
cairo_mesh_pattern_set_corner_color_rgb(pattern, corner_num, red, green, blue)
}
\arguments{
\item{pattern}{[\code{cairo_pattern_t *}] a #cairo_pattern_t}

\item{corner_num}{[\code{unsigned int}] the corner to set the color for}

\item{red}{[\code{double}] red component of color}

\item{green}{[\code{double}] green component of color}

\item{blue}{[\code{double}] blue component of color}
}
\description{
Sets the color of a corner of the current patch in a mesh pattern.
}
\details{
The color is specified in the same way as in cairo_set_source_rgb().

Valid values for corner_num are from 0 to 3 and identify the
corners as explained in cairo_pattern_create_mesh().

Note: If pattern is not a mesh pattern then pattern will be put
into an error status with a status of
\%CAIRO_STATUS_PATTERN_TYPE_MISMATCH. If corner_num is not valid,
pattern will be put into an error status with a status of
\%CAIRO_STATUS_INVALID_INDEX.  If pattern has no current patch,
pattern will be put into an error status with a status of
\%CAIRO_STATUS_INVALID_MESH_CONSTRUCTION.

Since: 1.12

C function prototype: \code{void cairo_mesh_pattern_set_corner_color_rgb (cairo_pattern_t *pattern, unsigned int corner_num, double red, double green, double blue)}
}
\seealso{
Other cairo-pattern: 
\code{\link{cairo_mesh_pattern_begin_patch}()},
\code{\link{cairo_mesh_pattern_curve_to}()},
\code{\link{cairo_mesh_pattern_end_patch}()},
\code{\link{cairo_mesh_pattern_get_control_point}()},
\code{\link{cairo_mesh_pattern_get_corner_color_rgba}()},
\code{\link{cairo_mesh_pattern_get_patch_count}()},
\code{\link{cairo_mesh_pattern_get_path}()},
\code{\link{cairo_mesh_pattern_line_to}()},
\code{\link{cairo_mesh_pattern_move_to}()},
\code{\link{cairo_mesh_pattern_set_control_point}()},
\code{\link{cairo_mesh_pattern_set_corner_color_rgba}()},
\code{\link{cairo_pattern_add_color_stop_rgba}()},
\code{\link{cairo_pattern_add_color_stop_rgb}()},
\code{\link{cairo_pattern_create_for_surface}()},
\code{\link{cairo_pattern_create_linear}()},
\code{\link{cairo_pattern_create_mesh}()},
\code{\link{cairo_pattern_create_radial}()},
\code{\link{cairo_pattern_create_rgba}()},
\code{\link{cairo_pattern_create_rgb}()},
\code{\link{cairo_pattern_get_color_stop_count}()},
\code{\link{cairo_pattern_get_color_stop_rgba}()},
\code{\link{cairo_pattern_get_extend}()},
\code{\link{cairo_pattern_get_filter}()},
\code{\link{cairo_pattern_get_linear_points}()},
\code{\link{cairo_pattern_get_matrix}()},
\code{\link{cairo_pattern_get_radial_circles}()},
\code{\link{cairo_pattern_get_rgba}()},
\code{\link{cairo_pattern_get_type}()},
\code{\link{cairo_pattern_set_extend}()},
\code{\link{cairo_pattern_set_filter}()},
\code{\link{cairo_pattern_set_matrix}()},
\code{\link{cairo_pattern_status}()}
}
\concept{cairo-pattern}
