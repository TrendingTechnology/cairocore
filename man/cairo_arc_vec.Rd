% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cairo--bespoke.R
\name{cairo_arc_vec}
\alias{cairo_arc_vec}
\title{Draw lots of arcs (circles)}
\usage{
cairo_arc_vec(cr, xc, yc, radius, angle1, angle2, r, g, b, a, sr, sg, sb, sa)
}
\arguments{
\item{cr}{\code{cairo_t *}}

\item{xc}{\code{double}}

\item{yc}{\code{double}}

\item{radius}{\code{double}}

\item{angle1}{\code{double}}

\item{angle2}{\code{double}}

\item{r, g, b, a}{fill colour values in range [0,1]. Set \code{a = 0} to
disable filling}

\item{sr, sg, sb, sa}{stroke colour values in range [0,1]. Set \code{sa = 0} to
disable drawing the stroke}
}
\description{
This is a custom function to draw lots of circles within C with a single
call from R.  Use this function when you want to draw lots of circles and
need to speed up the creation of the final image.
}
\details{
Besides the \code{cr} context, all arguments should either be the same length
as the initial argument (\code{xc}) or have a length of 1.

Vectors which have a length of 1 will be considered to have a constant value
for all objects
}
\examples{
\dontrun{
# Draw 10 circles of the same radius, with red fill and no outline
N <- 10
xc <- runif(N)
yc <- runif(N)
radius <- 3
cairo_arc_vec(cr, xc, yc, radius, 0, 2*pi,   1, 0, 0, 1,   0, 0, 0, 0)
}


}
\seealso{
Other bespoke: 
\code{\link{cairo_image_surface_create_from_array}()},
\code{\link{cairo_image_surface_get_array}()},
\code{\link{cairo_image_surface_get_raster}()},
\code{\link{cairo_image_surface_get_raw}()},
\code{\link{cairo_image_surface_write_array}()},
\code{\link{cairo_polygon_vec}()},
\code{\link{cairo_polygon}()},
\code{\link{cairo_rectangle_vec}()},
\code{\link{cairo_segment_vec}()}

Other vectorised: 
\code{\link{cairo_polygon_vec}()},
\code{\link{cairo_rectangle_vec}()},
\code{\link{cairo_segment_vec}()}
}
\concept{bespoke}
\concept{vectorised}
