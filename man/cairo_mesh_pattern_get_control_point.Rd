% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cairo-pattern.R
\name{cairo_mesh_pattern_get_control_point}
\alias{cairo_mesh_pattern_get_control_point}
\title{cairo_mesh_pattern_get_control_point}
\usage{
cairo_mesh_pattern_get_control_point(pattern, patch_num, point_num, x, y)
}
\arguments{
\item{pattern}{[\code{cairo_pattern_t *}] a #cairo_pattern_t}

\item{patch_num}{[\code{unsigned int}] the patch number to return data for}

\item{point_num}{[\code{unsigned int}] the control point number to return data for}

\item{x}{[\code{double *}] return value for the x coordinate of the control point, or \%NULL}

\item{y}{[\code{double *}] return value for the y coordinate of the control point, or \%NULL}
}
\value{
[\code{int}]
}
\description{
Gets the control point point_num of patch patch_num for a mesh
pattern.
}
\details{
patch_num can range from 0 to n-1 where n is the number returned by
cairo_mesh_pattern_get_patch_count().

Valid values for point_num are from 0 to 3 and identify the
control points as explained in cairo_pattern_create_mesh().

Return value: \%CAIRO_STATUS_SUCCESS, or \%CAIRO_STATUS_INVALID_INDEX
if patch_num or point_num is not valid for pattern. If pattern
is not a mesh pattern, \%CAIRO_STATUS_PATTERN_TYPE_MISMATCH is
returned.

Since: 1.12

C function prototype: \code{cairo_status_t cairo_mesh_pattern_get_control_point (cairo_pattern_t *pattern, unsigned int patch_num, unsigned int point_num, double *x, double *y)}
}
\seealso{
Other cairo-pattern: 
\code{\link{cairo_mesh_pattern_begin_patch}()},
\code{\link{cairo_mesh_pattern_curve_to}()},
\code{\link{cairo_mesh_pattern_end_patch}()},
\code{\link{cairo_mesh_pattern_get_corner_color_rgba}()},
\code{\link{cairo_mesh_pattern_get_patch_count}()},
\code{\link{cairo_mesh_pattern_get_path}()},
\code{\link{cairo_mesh_pattern_line_to}()},
\code{\link{cairo_mesh_pattern_move_to}()},
\code{\link{cairo_mesh_pattern_set_control_point}()},
\code{\link{cairo_mesh_pattern_set_corner_color_rgba}()},
\code{\link{cairo_mesh_pattern_set_corner_color_rgb}()},
\code{\link{cairo_pattern_add_color_stop_rgba}()},
\code{\link{cairo_pattern_add_color_stop_rgb}()},
\code{\link{cairo_pattern_create_for_surface}()},
\code{\link{cairo_pattern_create_linear}()},
\code{\link{cairo_pattern_create_mesh}()},
\code{\link{cairo_pattern_create_radial}()},
\code{\link{cairo_pattern_create_rgba}()},
\code{\link{cairo_pattern_create_rgb}()},
\code{\link{cairo_pattern_get_color_stop_count}()},
\code{\link{cairo_pattern_get_color_stop_rgba}()},
\code{\link{cairo_pattern_get_extend}()},
\code{\link{cairo_pattern_get_filter}()},
\code{\link{cairo_pattern_get_linear_points}()},
\code{\link{cairo_pattern_get_matrix}()},
\code{\link{cairo_pattern_get_radial_circles}()},
\code{\link{cairo_pattern_get_rgba}()},
\code{\link{cairo_pattern_get_type}()},
\code{\link{cairo_pattern_set_extend}()},
\code{\link{cairo_pattern_set_filter}()},
\code{\link{cairo_pattern_set_matrix}()},
\code{\link{cairo_pattern_status}()}
}
\concept{cairo-pattern}
