% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cairo-pattern.R
\name{cairo_pattern_add_color_stop_rgba}
\alias{cairo_pattern_add_color_stop_rgba}
\title{cairo_pattern_add_color_stop_rgba}
\usage{
cairo_pattern_add_color_stop_rgba(pattern, offset, red, green, blue, alpha)
}
\arguments{
\item{pattern}{[\code{cairo_pattern_t *}] a #cairo_pattern_t}

\item{offset}{[\code{double}] an offset in the range [0.0 .. 1.0]}

\item{red}{[\code{double}] red component of color}

\item{green}{[\code{double}] green component of color}

\item{blue}{[\code{double}] blue component of color}

\item{alpha}{[\code{double}] alpha component of color}
}
\description{
Adds a translucent color stop to a gradient pattern. The offset
specifies the location along the gradient's control vector. For
example, a linear gradient's control vector is from (x0,y0) to
(x1,y1) while a radial gradient's control vector is from any point
on the start circle to the corresponding point on the end circle.
}
\details{
The color is specified in the same way as in cairo_set_source_rgba().

If two (or more) stops are specified with identical offset values,
they will be sorted according to the order in which the stops are
added, (stops added earlier will compare less than stops added
later). This can be useful for reliably making sharp color
transitions instead of the typical blend.

Note: If the pattern is not a gradient pattern, (eg. a linear or
radial pattern), then the pattern will be put into an error status
with a status of \%CAIRO_STATUS_PATTERN_TYPE_MISMATCH.

Since: 1.0

C function prototype: \code{void cairo_pattern_add_color_stop_rgba (cairo_pattern_t *pattern, double offset, double red, double green, double blue, double alpha)}
}
\seealso{
Other cairo-pattern: 
\code{\link{cairo_mesh_pattern_begin_patch}()},
\code{\link{cairo_mesh_pattern_curve_to}()},
\code{\link{cairo_mesh_pattern_end_patch}()},
\code{\link{cairo_mesh_pattern_get_control_point}()},
\code{\link{cairo_mesh_pattern_get_corner_color_rgba}()},
\code{\link{cairo_mesh_pattern_get_patch_count}()},
\code{\link{cairo_mesh_pattern_get_path}()},
\code{\link{cairo_mesh_pattern_line_to}()},
\code{\link{cairo_mesh_pattern_move_to}()},
\code{\link{cairo_mesh_pattern_set_control_point}()},
\code{\link{cairo_mesh_pattern_set_corner_color_rgba}()},
\code{\link{cairo_mesh_pattern_set_corner_color_rgb}()},
\code{\link{cairo_pattern_add_color_stop_rgb}()},
\code{\link{cairo_pattern_create_for_surface}()},
\code{\link{cairo_pattern_create_linear}()},
\code{\link{cairo_pattern_create_mesh}()},
\code{\link{cairo_pattern_create_radial}()},
\code{\link{cairo_pattern_create_rgba}()},
\code{\link{cairo_pattern_create_rgb}()},
\code{\link{cairo_pattern_get_color_stop_count}()},
\code{\link{cairo_pattern_get_color_stop_rgba}()},
\code{\link{cairo_pattern_get_extend}()},
\code{\link{cairo_pattern_get_filter}()},
\code{\link{cairo_pattern_get_linear_points}()},
\code{\link{cairo_pattern_get_matrix}()},
\code{\link{cairo_pattern_get_radial_circles}()},
\code{\link{cairo_pattern_get_rgba}()},
\code{\link{cairo_pattern_get_type}()},
\code{\link{cairo_pattern_set_extend}()},
\code{\link{cairo_pattern_set_filter}()},
\code{\link{cairo_pattern_set_matrix}()},
\code{\link{cairo_pattern_status}()}
}
\concept{cairo-pattern}
